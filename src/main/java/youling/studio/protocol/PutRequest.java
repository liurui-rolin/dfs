/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package youling.studio.protocol;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PutRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2339751967776743972L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PutRequest\",\"namespace\":\"youling.studio.protocol\",\"fields\":[{\"name\":\"client_id\",\"type\":\"string\"},{\"name\":\"host\",\"type\":\"string\"},{\"name\":\"uri\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PutRequest> ENCODER =
      new BinaryMessageEncoder<PutRequest>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PutRequest> DECODER =
      new BinaryMessageDecoder<PutRequest>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PutRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PutRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PutRequest>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PutRequest to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PutRequest from a ByteBuffer. */
  public static PutRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence client_id;
  @Deprecated public java.lang.CharSequence host;
  @Deprecated public java.lang.CharSequence uri;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PutRequest() {}

  /**
   * All-args constructor.
   * @param client_id The new value for client_id
   * @param host The new value for host
   * @param uri The new value for uri
   */
  public PutRequest(java.lang.CharSequence client_id, java.lang.CharSequence host, java.lang.CharSequence uri) {
    this.client_id = client_id;
    this.host = host;
    this.uri = uri;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return client_id;
    case 1: return host;
    case 2: return uri;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: client_id = (java.lang.CharSequence)value$; break;
    case 1: host = (java.lang.CharSequence)value$; break;
    case 2: uri = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'client_id' field.
   * @return The value of the 'client_id' field.
   */
  public java.lang.CharSequence getClientId() {
    return client_id;
  }

  /**
   * Sets the value of the 'client_id' field.
   * @param value the value to set.
   */
  public void setClientId(java.lang.CharSequence value) {
    this.client_id = value;
  }

  /**
   * Gets the value of the 'host' field.
   * @return The value of the 'host' field.
   */
  public java.lang.CharSequence getHost() {
    return host;
  }

  /**
   * Sets the value of the 'host' field.
   * @param value the value to set.
   */
  public void setHost(java.lang.CharSequence value) {
    this.host = value;
  }

  /**
   * Gets the value of the 'uri' field.
   * @return The value of the 'uri' field.
   */
  public java.lang.CharSequence getUri() {
    return uri;
  }

  /**
   * Sets the value of the 'uri' field.
   * @param value the value to set.
   */
  public void setUri(java.lang.CharSequence value) {
    this.uri = value;
  }

  /**
   * Creates a new PutRequest RecordBuilder.
   * @return A new PutRequest RecordBuilder
   */
  public static youling.studio.protocol.PutRequest.Builder newBuilder() {
    return new youling.studio.protocol.PutRequest.Builder();
  }

  /**
   * Creates a new PutRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PutRequest RecordBuilder
   */
  public static youling.studio.protocol.PutRequest.Builder newBuilder(youling.studio.protocol.PutRequest.Builder other) {
    return new youling.studio.protocol.PutRequest.Builder(other);
  }

  /**
   * Creates a new PutRequest RecordBuilder by copying an existing PutRequest instance.
   * @param other The existing instance to copy.
   * @return A new PutRequest RecordBuilder
   */
  public static youling.studio.protocol.PutRequest.Builder newBuilder(youling.studio.protocol.PutRequest other) {
    return new youling.studio.protocol.PutRequest.Builder(other);
  }

  /**
   * RecordBuilder for PutRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PutRequest>
    implements org.apache.avro.data.RecordBuilder<PutRequest> {

    private java.lang.CharSequence client_id;
    private java.lang.CharSequence host;
    private java.lang.CharSequence uri;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(youling.studio.protocol.PutRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.client_id)) {
        this.client_id = data().deepCopy(fields()[0].schema(), other.client_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.host)) {
        this.host = data().deepCopy(fields()[1].schema(), other.host);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.uri)) {
        this.uri = data().deepCopy(fields()[2].schema(), other.uri);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PutRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(youling.studio.protocol.PutRequest other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.client_id)) {
        this.client_id = data().deepCopy(fields()[0].schema(), other.client_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.host)) {
        this.host = data().deepCopy(fields()[1].schema(), other.host);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.uri)) {
        this.uri = data().deepCopy(fields()[2].schema(), other.uri);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'client_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getClientId() {
      return client_id;
    }

    /**
      * Sets the value of the 'client_id' field.
      * @param value The value of 'client_id'.
      * @return This builder.
      */
    public youling.studio.protocol.PutRequest.Builder setClientId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.client_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'client_id' field has been set.
      * @return True if the 'client_id' field has been set, false otherwise.
      */
    public boolean hasClientId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'client_id' field.
      * @return This builder.
      */
    public youling.studio.protocol.PutRequest.Builder clearClientId() {
      client_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'host' field.
      * @return The value.
      */
    public java.lang.CharSequence getHost() {
      return host;
    }

    /**
      * Sets the value of the 'host' field.
      * @param value The value of 'host'.
      * @return This builder.
      */
    public youling.studio.protocol.PutRequest.Builder setHost(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.host = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'host' field has been set.
      * @return True if the 'host' field has been set, false otherwise.
      */
    public boolean hasHost() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'host' field.
      * @return This builder.
      */
    public youling.studio.protocol.PutRequest.Builder clearHost() {
      host = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getUri() {
      return uri;
    }

    /**
      * Sets the value of the 'uri' field.
      * @param value The value of 'uri'.
      * @return This builder.
      */
    public youling.studio.protocol.PutRequest.Builder setUri(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.uri = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'uri' field has been set.
      * @return True if the 'uri' field has been set, false otherwise.
      */
    public boolean hasUri() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'uri' field.
      * @return This builder.
      */
    public youling.studio.protocol.PutRequest.Builder clearUri() {
      uri = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PutRequest build() {
      try {
        PutRequest record = new PutRequest();
        record.client_id = fieldSetFlags()[0] ? this.client_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.host = fieldSetFlags()[1] ? this.host : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.uri = fieldSetFlags()[2] ? this.uri : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PutRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<PutRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PutRequest>
    READER$ = (org.apache.avro.io.DatumReader<PutRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
